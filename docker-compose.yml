---
services:
  api:
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      TMDB_API_KEY: ${TMDB_API_KEY}
      IMDB_API_KEY: ${IMDB_API_KEY}
      TVDB_API_KEY: ${TVDB_API_KEY}
      JELLYFIN_API_KEY: ${JELLYFIN_API_KEY}
      RADARR_API_KEY: ${RADARR_API_KEY}
      SONARR_API_KEY: ${SONARR_API_KEY}
      TZ: ${TZ}
      UID: ${UID}
      GID: ${GID}
    volumes:
      - .:/app
    command: >
      uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data: